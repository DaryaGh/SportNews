# Generated by Django 5.1.3 on 2024-11-09 11:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('body', models.TextField(blank=True, null=True)),
                ('main_picture', models.CharField(max_length=200)),
                ('logo', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Advertising',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('published_date_start', models.DateTimeField()),
                ('published_date_expire', models.DateTimeField()),
                ('is_active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225)),
                ('is_active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('file_name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetaAdvertising',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('phone', models.CharField(max_length=200)),
                ('e_mail', models.EmailField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='MetaContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('phone', models.CharField(max_length=200)),
                ('e_mail', models.EmailField(max_length=200)),
                ('address', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='NewsPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('is_published', models.BooleanField(default=False)),
                ('published_date', models.DateTimeField()),
                ('image_of_newspaper', models.CharField(max_length=200)),
                ('name_of_newspaper', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='title', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='title', max_length=200)),
                ('like_count', models.IntegerField(default=0)),
                ('dislike_count', models.IntegerField(default=0)),
                ('published_at', models.DateTimeField(default=None)),
                ('number_of_visited', models.IntegerField()),
                ('main_picture', models.CharField(max_length=200)),
                ('body', models.TextField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('news_type', models.CharField(choices=[('IR', 'IRAN_NEWS'), ('WO', 'WORLD_NEWS')], default='IR', max_length=3)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('Category', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.category')),
                ('image', models.ManyToManyField(related_name='images_news', to='Sport_News.image')),
            ],
        ),
        migrations.AddField(
            model_name='image',
            name='news',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='images_1', to='Sport_News.news'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_count', models.IntegerField(default=0)),
                ('dislike_count', models.IntegerField(default=0)),
                ('body', models.TextField(blank=True, null=True)),
                ('reply_answer', models.TextField(blank=True, null=True)),
                ('published_at', models.DateTimeField(default=None)),
                ('is_approved', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PF', 'Published'), ('PN', 'Pending')], default='DF', max_length=3)),
                ('replay_type', models.CharField(choices=[('Q', 'Question'), ('R', 'Response')], default='Q', max_length=3)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('news', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.news')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_tag', models.CharField(max_length=200)),
                ('main_picture', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PF', 'Published'), ('PN', 'Pending')], default='DF', max_length=2)),
                ('visibility', models.CharField(choices=[('VI', 'Visible'), ('IN', 'Invisible')], default='IN', max_length=2)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('image', models.ManyToManyField(related_name='images_tag', to='Sport_News.image')),
            ],
        ),
        migrations.CreateModel(
            name='PhotoGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('file_name', models.CharField(max_length=200)),
                ('photographer', models.CharField(max_length=200)),
                ('body', models.TextField(blank=True, null=True)),
                ('like_count', models.IntegerField(default=0)),
                ('number_of_visited', models.IntegerField()),
                ('published_at', models.DateTimeField(default=None)),
                ('is_active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.category')),
                ('comment', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.comment')),
                ('news', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.news')),
                ('tags', models.ManyToManyField(related_name='tags_2', to='Sport_News.tag')),
            ],
        ),
        migrations.AddField(
            model_name='news',
            name='tags',
            field=models.ManyToManyField(related_name='tags', to='Sport_News.tag'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('e_mail', models.EmailField(max_length=200)),
                ('mobile', models.CharField(max_length=11)),
                ('password', models.CharField(max_length=200)),
                ('nick_name', models.CharField(max_length=200)),
                ('join_website_date', models.DateField()),
                ('main_picture', models.CharField(max_length=200)),
                ('user_type', models.CharField(choices=[('VIP', 'VIP'), ('MANAGER', 'MANAGER'), ('USER', 'USER')], default='USER', max_length=200)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('role', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.role')),
            ],
        ),
        migrations.AddField(
            model_name='tag',
            name='createdUsers',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='users_2', to='Sport_News.user'),
        ),
        migrations.AddField(
            model_name='tag',
            name='updatedUsers',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='users_3', to='Sport_News.user'),
        ),
        migrations.CreateModel(
            name='Reporting_a_Violation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('admin_reason', models.TextField(blank=True, null=True)),
                ('published_at', models.DateTimeField(default=None)),
                ('is_approved', models.BooleanField(default=False)),
                ('violation_type', models.CharField(choices=[('IN', 'Insult'), ('PO', 'Political'), ('SP', 'Spam'), ('VW', 'Vulgar Words')], default='IN', max_length=3)),
                ('admin_reason_type', models.CharField(choices=[('TR', 'True'), ('FS', 'False')], default='TR', max_length=3)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('comment', models.ManyToManyField(related_name='comments', to='Sport_News.comment')),
                ('users', models.ManyToManyField(related_name='users', to='Sport_News.user')),
            ],
        ),
        migrations.CreateModel(
            name='Podcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('like_count', models.IntegerField(default=0)),
                ('body', models.TextField(blank=True, null=True)),
                ('download_count', models.IntegerField(default=0)),
                ('number_of_visited', models.IntegerField(default=0)),
                ('file_name', models.CharField(max_length=200)),
                ('published_at', models.DateTimeField(default=None)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.comment')),
                ('createdUsers', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='podcasts_0', to='Sport_News.user')),
                ('updatedUsers', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='podcasts_1', to='Sport_News.user')),
            ],
        ),
        migrations.AddField(
            model_name='news',
            name='createdUsers',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='users_0', to='Sport_News.user'),
        ),
        migrations.AddField(
            model_name='news',
            name='updatedUsers',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='users_1', to='Sport_News.user'),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('body', models.TextField(blank=True, null=True)),
                ('poster_file_name', models.CharField(max_length=200)),
                ('like_count', models.IntegerField(default=0)),
                ('download_count', models.IntegerField(default=0)),
                ('published_at', models.DateTimeField(default=None)),
                ('is_active', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PF', 'Published'), ('PN', 'Pending')], default='DF', max_length=2)),
                ('media_type', models.CharField(choices=[('IR', 'Iran_Media'), ('WO', 'World_Media')], default='IR', max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('Category', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.category')),
                ('comment', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.comment')),
                ('tags', models.ManyToManyField(related_name='tags_1', to='Sport_News.tag')),
                ('createdUsers', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='media_0', to='Sport_News.user')),
                ('updatedUsers', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='media_1', to='Sport_News.user')),
            ],
        ),
        migrations.CreateModel(
            name='ErrorReporting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('body', models.TextField(blank=True, null=True)),
                ('admin_reason', models.TextField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('problem_type', models.CharField(choices=[('CP', 'Content Problem'), ('WP', 'Writing Problem'), ('OCP', 'Other Problem')], default='OCP', max_length=3)),
                ('admin_reason_type', models.CharField(choices=[('TR', 'True'), ('FS', 'False')], default='TR', max_length=3)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('news', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.news')),
                ('users', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.user')),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('e_mail', models.EmailField(blank=True, max_length=200, null=True)),
                ('mobile', models.CharField(blank=True, max_length=11, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('published_at', models.DateTimeField(default=None)),
                ('is_approved', models.BooleanField(default=False)),
                ('related_unit', models.CharField(choices=[('NE', 'News'), ('MS', 'Management Site'), ('VD', 'Video'), ('TE', 'Technical'), ('AD', 'Advertising'), ('MA', 'Marketing')], default='NE', max_length=3)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('metacontactus', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.metacontactus')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.user')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='admin_approve',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='admin_approve', to='Sport_News.user'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.user'),
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=200)),
                ('body', models.TextField(blank=True, null=True)),
                ('color_background', models.CharField(max_length=200)),
                ('color_skin', models.CharField(max_length=200)),
                ('hair_color', models.CharField(max_length=200)),
                ('hair_style', models.CharField(max_length=200)),
                ('eyes', models.CharField(max_length=200)),
                ('eyebrow', models.CharField(max_length=200)),
                ('nose', models.CharField(max_length=200)),
                ('mouth', models.CharField(max_length=200)),
                ('shirt', models.CharField(max_length=200)),
                ('color_shirt', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Sport_News.user')),
            ],
        ),
    ]
